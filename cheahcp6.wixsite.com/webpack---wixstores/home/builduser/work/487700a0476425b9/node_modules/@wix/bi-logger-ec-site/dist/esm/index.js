var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function(s, e) {
    var t = {};
    for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var defaultConfig = {
    endpoint: 'ec-site'
};
var init = function(webOrMobileLogger) {
    return function(userConfig) {
        if (userConfig === void 0) {
            userConfig = {};
        }
        var defaults = userConfig.defaults,
            restOfConfig = __rest(userConfig, ["defaults"]);
        var config = __assign(__assign({}, defaultConfig), restOfConfig);
        var factoryInstance = typeof webOrMobileLogger.factory === 'function' ? webOrMobileLogger.factory(config) : webOrMobileLogger;
        var logger = getLogger(factoryInstance);
        return defaults ? logger.util.updateDefaults(defaults) : logger;
    };
};
var initCustomLogger = function(factoryInstance) {
    return getLogger(factoryInstance);
};
var getLogger = function(biLoggerClientFactoryInstance) {
    return new Logger(biLoggerClientFactoryInstance);
};
var Logger = /** @class */ (function() {
    function Logger(biLoggerClientFactoryInstance) {
        var _this = this;
        this.biLoggerClientFactoryInstance = biLoggerClientFactoryInstance;
        this.util = {
            updateDefaults: function(defaults) {
                _this.biLoggerClientFactoryInstance.updateDefaults(defaults);
                return _this;
            },
            log: function(logParams, context) {
                return _this.bi.log(logParams, context);
            }
        };
        biLoggerClientFactoryInstance.updateDefaults({
            src: 130
        });
        this.bi = biLoggerClientFactoryInstance.logger({});
    }
    Logger.prototype.checkoutMinimumOrderClickOnGotItInErrorModalInCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 655
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartClickOnCartIconToOpenMiniCart = function(params) {
        return this.bi.log(__assign({
            evid: 49
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.thankYouPageLoadSf = function(params) {
        return this.bi.log(__assign({
            evid: 174
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnBackInCheckoutProcess = function(params) {
        return this.bi.log(__assign({
            evid: 170
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutSubscriptionCheckboxIsCheckUncheck = function(params) {
        return this.bi.log(__assign({
            evid: 837
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.updatedCartItemQuantitySf = function(params) {
        return this.bi.log(__assign({
            evid: 116
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnAddToCart = function(params) {
        return this.bi.log(__assign({
            evid: 63
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnAddNoteToSellerSf = function(params) {
        return this.bi.log(__assign({
            evid: 121
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutPageSpecificStageExpanded = function(params) {
        return this.bi.log(__assign({
            evid: 37
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.oaDebugGeneralEvent = function(params) {
        return this.bi.log(__assign({
            evid: 458
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutNotAbleToAcceptPaymentsVisitorPopupSf = function(params) {
        return this.bi.log(__assign({
            evid: 283
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickToAddCoupon = function(params) {
        return this.bi.log(__assign({
            evid: 111
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutUouSetShippingMethodInExpressCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 843
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickPlaceOrderWithSubscription = function(params) {
        return this.bi.log(__assign({
            evid: 58
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.thankYouPageContinueBrowsingLinkClickedSf = function(params) {
        return this.bi.log(__assign({
            evid: 176
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutPolicyAgreementCheckboxIsCheckUncheck = function(params) {
        return this.bi.log(__assign({
            evid: 836
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutTipsTipAddedToCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 834
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.errorInCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 24
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.updateClickedInSelectYourShippingDestinationPopupSf = function(params) {
        return this.bi.log(__assign({
            evid: 125
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutRedirectFromOoiCheckoutForDev = function(params) {
        return this.bi.log(__assign({
            evid: 718
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutUouReturnsFromExpressCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 842
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartMiniCartLoaded = function(params) {
        return this.bi.log(__assign({
            evid: 211
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutOoiDevsQaEvent = function(params) {
        return this.bi.log(__assign({
            evid: 707
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnEditCart = function(params) {
        return this.bi.log(__assign({
            evid: 171
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutTotalsHaveBeenUpdatedPopUpShown = function(params) {
        return this.bi.log(__assign({
            evid: 839
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutClickLoginInCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 604
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.membersAddressInCheckoutWasChanged = function(params) {
        return this.bi.log(__assign({
            evid: 48
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorClickOnLeftBarTabsOnComponentSettingsSfe = function(params) {
        return this.bi.log(__assign({
            evid: 33
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.oneAppStoreFrontClearCartSf = function(params) {
        return this.bi.log(__assign({
            evid: 184
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutUouSetShippingAddressInExpressCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 844
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutMinimumOrderModalIsShownInCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 654
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.shippingAddressSet = function(params) {
        return this.bi.log(__assign({
            evid: 161
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorChangeTextFieldSfe = function(params) {
        return this.bi.log(__assign({
            evid: 833
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.saveNoteToSellerSf = function(params) {
        return this.bi.log(__assign({
            evid: 122
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutOpenCloseYourOrderSummaryInMobile = function(params) {
        return this.bi.log(__assign({
            evid: 835
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorOpenAppSettingsSfe = function(params) {
        return this.bi.log(__assign({
            evid: 811
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.viewCartPageSf = function(params) {
        return this.bi.log(__assign({
            evid: 124
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutMemberClickOnEditMemberAddress = function(params) {
        return this.bi.log(__assign({
            evid: 827
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.ordersViewOrderDetailsPageSf = function(params) {
        return this.bi.log(__assign({
            evid: 128
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.giftCardCheckoutClickApply = function(params) {
        return this.bi.log(__assign({
            evid: 529
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.ordersViewOrderHistoryPageSf = function(params) {
        return this.bi.log(__assign({
            evid: 127
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutShowMerchantPaymentPopupSf = function(params) {
        return this.bi.log(__assign({
            evid: 164
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.selectPaymentCategory = function(params) {
        return this.bi.log(__assign({
            evid: 200
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartMinimumOrderMessageIsShownInCart = function(params) {
        return this.bi.log(__assign({
            evid: 653
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 114
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.removeACoupon = function(params) {
        return this.bi.log(__assign({
            evid: 118
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutRedirectToCheckoutFromExpressCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 845
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutMemberMemberAddressCreated = function(params) {
        return this.bi.log(__assign({
            evid: 824
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutPageLoad = function(params) {
        return this.bi.log(__assign({
            evid: 36
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutClickOnCtaInTotalsHaveBeenUpdatedPopup = function(params) {
        return this.bi.log(__assign({
            evid: 840
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickLogoutInCheckout = function(params) {
        return this.bi.log(__assign({
            evid: 601
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.thankYouPageClickOnLinkOnLineItem = function(params) {
        return this.bi.log(__assign({
            evid: 175
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.storesScreenRenderedOa = function(params) {
        return this.bi.log(__assign({
            evid: 212
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutMemberClickOnAddNewAddress = function(params) {
        return this.bi.log(__assign({
            evid: 826
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnContinueShoppingFromCart = function(params) {
        return this.bi.log(__assign({
            evid: 120
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorChangeCartIconSfe = function(params) {
        return this.bi.log(__assign({
            evid: 820
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartCartIconLoaded = function(params) {
        return this.bi.log(__assign({
            evid: 546
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartShowMerchantShippingPopup = function(params) {
        return this.bi.log(__assign({
            evid: 173
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickPlaceOrder = function(params) {
        return this.bi.log(__assign({
            evid: 168
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.giftCardCheckoutClickOnCheckbox = function(params) {
        return this.bi.log(__assign({
            evid: 527
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutMemberMemberAddressUpdated = function(params) {
        return this.bi.log(__assign({
            evid: 825
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.couponApplied = function(params) {
        return this.bi.log(__assign({
            evid: 119
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnReturnToCheckoutInLogoutModal = function(params) {
        return this.bi.log(__assign({
            evid: 603
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.deliveryMethodSet = function(params) {
        return this.bi.log(__assign({
            evid: 163
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickApplyCoupon = function(params) {
        return this.bi.log(__assign({
            evid: 112
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.giftCardCheckoutCodeApplied = function(params) {
        return this.bi.log(__assign({
            evid: 535
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.bisRequestIsAlreadyCreatedError = function(params) {
        return this.bi.log(__assign({
            evid: 27
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.removedProductFromCartSf = function(params) {
        return this.bi.log(__assign({
            evid: 115
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutClickOnCallToActionInMerchantPopUpSf = function(params) {
        return this.bi.log(__assign({
            evid: 169
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.ordersClickInOrderHistoryPageSf = function(params) {
        return this.bi.log(__assign({
            evid: 129
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.deleteNoteToSellerSf = function(params) {
        return this.bi.log(__assign({
            evid: 123
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnShippingDestinationInCartPageSf = function(params) {
        return this.bi.log(__assign({
            evid: 223
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorChangeStyleColorSfe = function(params) {
        return this.bi.log(__assign({
            evid: 812
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.membersClickChangeInCheckoutStages = function(params) {
        return this.bi.log(__assign({
            evid: 46
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnCheckoutWithEWallet = function(params) {
        return this.bi.log(__assign({
            evid: 113
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutErrorTrackingForDevelopers = function(params) {
        return this.bi.log(__assign({
            evid: 713
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.giftCardCheckoutRemoveCode = function(params) {
        return this.bi.log(__assign({
            evid: 536
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutClickOnContinueInCheckoutProcess = function(params) {
        return this.bi.log(__assign({
            evid: 29
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutClickOnCheckoutPolicies = function(params) {
        return this.bi.log(__assign({
            evid: 712
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorClickOnChangeLinkInSettingsSfe = function(params) {
        return this.bi.log(__assign({
            evid: 196
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorChangeMiniCartBehaviorSfe = function(params) {
        return this.bi.log(__assign({
            evid: 822
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickToOpenStoreManagerSfe = function(params) {
        return this.bi.log(__assign({
            evid: 814
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutShowHideItemsSectionInMobileView = function(params) {
        return this.bi.log(__assign({
            evid: 838
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickToViewCartPage = function(params) {
        return this.bi.log(__assign({
            evid: 130
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutErrorWhenApplyingAGiftCard = function(params) {
        return this.bi.log(__assign({
            evid: 717
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutLoadingCheckoutPageFailForDev = function(params) {
        return this.bi.log(__assign({
            evid: 719
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickToViewProductFromCartPageOa = function(params) {
        return this.bi.log(__assign({
            evid: 706
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickOnMyOrdersInThankYouPageOaStoreFront = function(params) {
        return this.bi.log(__assign({
            evid: 187
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.bisClickOnNotifyMeButtonToOpenModal = function(params) {
        return this.bi.log(__assign({
            evid: 25
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickManageProductInCartOaStoreFront = function(params) {
        return this.bi.log(__assign({
            evid: 185
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.checkoutIntegratingFormsFailure = function(params) {
        return this.bi.log(__assign({
            evid: 823
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartSelectShippingMethodFromTheDropdownInCartPage = function(params) {
        return this.bi.log(__assign({
            evid: 222
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.clickContinueEWalletModalSf = function(params) {
        return this.bi.log(__assign({
            evid: 225
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorResetAppSettingsSfe = function(params) {
        return this.bi.log(__assign({
            evid: 819
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.logoutModalInCheckoutLoaded = function(params) {
        return this.bi.log(__assign({
            evid: 602
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cancelClickedInSelectYourShippingDestinationPopupSf = function(params) {
        return this.bi.log(__assign({
            evid: 126
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartViewMiniCart = function(params) {
        return this.bi.log(__assign({
            evid: 50
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.errorWhenApplyingACoupon = function(params) {
        return this.bi.log(__assign({
            evid: 117
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.paymentDetailsCompleted = function(params) {
        return this.bi.log(__assign({
            evid: 177
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.bisClickOnTheSubmitButton = function(params) {
        return this.bi.log(__assign({
            evid: 26
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.buyerShippingCountryIsSet = function(params) {
        return this.bi.log(__assign({
            evid: 661
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.editorChangeElementSettingsSfe = function(params) {
        return this.bi.log(__assign({
            evid: 831
        }, params), {
            endpoint: 'ec-site'
        });
    };
    Logger.prototype.cartSelectCountryInShippingDestinationPopup = function(params) {
        return this.bi.log(__assign({
            evid: 841
        }, params), {
            endpoint: 'ec-site'
        });
    };
    return Logger;
}());
export {
    Logger
};
export default init;
export function getLoggerConf() {
    return {
        src: 130,
        endpoint: 'ec-site'
    };
}
//# sourceMappingURL=index.js.map