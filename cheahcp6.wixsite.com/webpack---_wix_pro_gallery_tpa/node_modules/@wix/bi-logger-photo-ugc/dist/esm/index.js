var __rest = (this && this.__rest) || function(s, e) {
    var t = {};
    for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
const defaultConfig = {
    endpoint: 'photo-ugc'
};
const init = (webOrMobileLogger) => (userConfig = {}) => {
    const {
        defaults
    } = userConfig, restOfConfig = __rest(userConfig, ["defaults"]);
    const config = Object.assign(Object.assign({}, defaultConfig), restOfConfig);
    const factoryInstance = typeof webOrMobileLogger.factory === 'function' ? webOrMobileLogger.factory(config) : webOrMobileLogger;
    const logger = getLogger(factoryInstance);
    return defaults ? logger.util.updateDefaults(defaults) : logger;
};
const initCustomLogger = (factoryInstance) => getLogger(factoryInstance);
const getLogger = (biLoggerClientFactoryInstance) => {
    return new Logger(biLoggerClientFactoryInstance);
};
export class Logger {
    constructor(biLoggerClientFactoryInstance) {
        this.biLoggerClientFactoryInstance = biLoggerClientFactoryInstance;
        this.util = {
            updateDefaults: (defaults) => {
                this.biLoggerClientFactoryInstance.updateDefaults(defaults);
                return this;
            },
            log: (logParams, context) => {
                return this.bi.log(logParams, context);
            }
        };
        biLoggerClientFactoryInstance.updateDefaults({
            src: 65
        });
        this.bi = biLoggerClientFactoryInstance.logger({});
    }
    landAfterShare(params) {
        return this.bi.log(Object.assign({
            evid: 602
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    navigationInCollectionMemberArea(params) {
        return this.bi.log(Object.assign({
            evid: 234
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    albumNameTooltip(params) {
        return this.bi.log(Object.assign({
            evid: 295
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    createCollection(params) {
        return this.bi.log(Object.assign({
            evid: 198
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    expand(params) {
        return this.bi.log(Object.assign({
            evid: 504
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    clickSaveCollection(params) {
        return this.bi.log(Object.assign({
            evid: 232
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    downloadFilesFromCollection(params) {
        return this.bi.log(Object.assign({
            evid: 218
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    providerCartCheckout(params) {
        return this.bi.log(Object.assign({
            evid: 803
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    info(params) {
        return this.bi.log(Object.assign({
            evid: 503
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    galleryItemExpanded(params) {
        return this.bi.log(Object.assign({
            evid: 521
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    previewItemInCollection(params) {
        return this.bi.log(Object.assign({
            evid: 230
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    share(params) {
        return this.bi.log(Object.assign({
            evid: 500
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    downloadImage(params) {
        return this.bi.log(Object.assign({
            evid: 805
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    galleryClickOnItem(params) {
        return this.bi.log(Object.assign({
            evid: 520
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    gogLoaded(params) {
        return this.bi.log(Object.assign({
            evid: 301
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    buyBuyNowClick(params) {
        return this.bi.log(Object.assign({
            evid: 800
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    addCommentOnAnItemCollection(params) {
        return this.bi.log(Object.assign({
            evid: 229
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    proGalleryErrorUou(params) {
        return this.bi.log(Object.assign({
            evid: 512
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    paymentExcepted(params) {
        return this.bi.log(Object.assign({
            evid: 506
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    providerBuyAddToCart(params) {
        return this.bi.log(Object.assign({
            evid: 802
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    albumNameError(params) {
        return this.bi.log(Object.assign({
            evid: 294
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    collectionCreated(params) {
        return this.bi.log(Object.assign({
            evid: 199
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    albumActions(params) {
        return this.bi.log(Object.assign({
            evid: 300
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    proGalleryLoadUou(params) {
        return this.bi.log(Object.assign({
            evid: 304
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    shareGroup(params) {
        return this.bi.log(Object.assign({
            evid: 601
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    thankYouPageLoaded(params) {
        return this.bi.log(Object.assign({
            evid: 804
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    photoAlbumButtonOnClick(params) {
        return this.bi.log(Object.assign({
            evid: 211
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    buySelectLicense(params) {
        return this.bi.log(Object.assign({
            evid: 801
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    photoAlbumCoverLoaded(params) {
        return this.bi.log(Object.assign({
            evid: 303
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    download(params) {
        return this.bi.log(Object.assign({
            evid: 502
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    migratedLoveData(params) {
        return this.bi.log(Object.assign({
            evid: 305
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    shareNew(params) {
        return this.bi.log(Object.assign({
            evid: 511
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    dropDownMenuOnPhoto(params) {
        return this.bi.log(Object.assign({
            evid: 285
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    popupOpened(params) {
        return this.bi.log(Object.assign({
            evid: 279
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    buyGalleryAddToCart(params) {
        return this.bi.log(Object.assign({
            evid: 806
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    paymentError(params) {
        return this.bi.log(Object.assign({
            evid: 507
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    clickOnInviteMemberToCollection(params) {
        return this.bi.log(Object.assign({
            evid: 233
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    artStorePerformanceUou(params) {
        return this.bi.log(Object.assign({
            evid: 306
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    gogAlbumClick(params) {
        return this.bi.log(Object.assign({
            evid: 302
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    galleryRendered(params) {
        return this.bi.log(Object.assign({
            evid: 508
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    clickButtonInPopup(params) {
        return this.bi.log(Object.assign({
            evid: 297
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    openWizardCreateCollection(params) {
        return this.bi.log(Object.assign({
            evid: 208
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    proGalleryLoaded(params) {
        return this.bi.log(Object.assign({
            evid: 510
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    xxxcheckout(params) {
        return this.bi.log(Object.assign({
            evid: 505
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    proGalleryClickOnCustomButton(params) {
        return this.bi.log(Object.assign({
            evid: 807
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    love(params) {
        return this.bi.log(Object.assign({
            evid: 501
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    clickOnSelectMediaCollection(params) {
        return this.bi.log(Object.assign({
            evid: 228
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    selectPhoto(params) {
        return this.bi.log(Object.assign({
            evid: 600
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    proGalleryLoadError(params) {
        return this.bi.log(Object.assign({
            evid: 509
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
    photoAlbumGalleryLoaded(params) {
        return this.bi.log(Object.assign({
            evid: 307
        }, params), {
            endpoint: 'photo-ugc'
        });
    }
}
export default init;
export function getLoggerConf() {
    return {
        src: 65,
        endpoint: 'photo-ugc'
    };
}
//# sourceMappingURL=index.js.map