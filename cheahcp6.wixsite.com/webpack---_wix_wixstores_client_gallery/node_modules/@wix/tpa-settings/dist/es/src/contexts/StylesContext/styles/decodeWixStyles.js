import {
    __assign
} from "tslib";
import {
    getFontFromPreset
} from '../../..';
import {
    decode
} from './WixStyleColors';
export function decodeWixStyles(params, siteColors, textPresets) {
    var fonts = Object.keys(params.fonts || []).reduce(function(acc, key) {
        var _a;
        var _b;
        var currentFont = params.fonts[key];
        return __assign(__assign({}, acc), {
            fonts: __assign(__assign({}, acc.fonts), (_a = {}, _a[key] = currentFont.preset !== 'Custom' ?
                (_b = getFontFromPreset(params.fonts[key].preset, textPresets)) !== null && _b !== void 0 ? _b : currentFont :
                currentFont, _a))
        });
    }, {
        fonts: {}
    }).fonts;
    var _a = Object.keys(params.colors || []).reduce(function(acc, key) {
            var _a;
            try {
                var color = decode(params.colors[key], siteColors);
                return __assign(__assign({}, acc), {
                    colors: __assign(__assign({}, acc.colors), (_a = {}, _a[key] = color, _a))
                });
            } catch (e) {
                return __assign(__assign({}, acc), {
                    errors: acc.errors.concat(key)
                });
            }
        }, {
            colors: {},
            errors: []
        }),
        colors = _a.colors,
        errors = _a.errors;
    if (process.env.NODE_ENV === 'development' && errors.length) {
        console.warn("Styles parsing error: Can't parse styles for the following keys: ".concat(errors
            .map(function(error) {
                return "\"".concat(error, "\"");
            })
            .join(', '), ". These keys will be ignored."));
    }
    return __assign(__assign({}, params), {
        fonts: fonts,
        colors: colors
    });
}
//# sourceMappingURL=decodeWixStyles.js.map