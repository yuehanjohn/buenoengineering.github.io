import React from 'react';
import {
    ExperimentsContext
} from './ExperimentsContext';
export function useExperiments(_a) {
    var _b = _a === void 0 ? {} : _a,
        _c = _b.suspense,
        suspense = _c === void 0 ? true : _c,
        readOnly = _b.readOnly;
    var experimentsContext = React.useContext(ExperimentsContext);
    if (!experimentsContext) {
        throw new Error('You are trying to get Experiments outside ExperimentsProvider component.\nPlease wrap up your application in ExperimentsProvider.');
    }
    var ready = experimentsContext.ready,
        promise = experimentsContext.promise,
        experimentsInstance = experimentsContext.experimentsInstance;
    if (process.env.NODE_ENV === 'development' &&
        !readOnly &&
        !('load' in experimentsInstance)) {
        throw new Error('PureExperimentsProvider was provided with a ReadOnlyExperiments instance, while useExperiments({ readOnly: false }) was used.');
    }
    if (suspense && !ready) {
        throw promise;
    }
    return {
        ready: ready,
        experiments: experimentsInstance,
    };
}
//# sourceMappingURL=useExperiments.js.map