var __assign = (this && this.__assign) || function() {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p))
                    t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function(s, e) {
    var t = {};
    for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import {
    TpaSettingsProviderForWidget,
} from '@wix/tpa-settings/react';
import {
    useExperiments
} from '..';
var useNoExperiments = function() {
    return null;
};
export var TpaSettingsProviderWithExperiments = function(props) {
    var experimentsDisabled = props.experimentsDisabled,
        otherProps = __rest(props, ["experimentsDisabled"]);
    var useHook = experimentsDisabled ? useNoExperiments : useExperiments;
    var experimentsContext = useHook();
    return (React.createElement(TpaSettingsProviderForWidget, __assign({
        experiments: experimentsContext === null || experimentsContext === void 0 ? void 0 : experimentsContext.experiments
    }, otherProps)));
};
//# sourceMappingURL=WidgetTpaSettingsProviderWithExperiments.js.map