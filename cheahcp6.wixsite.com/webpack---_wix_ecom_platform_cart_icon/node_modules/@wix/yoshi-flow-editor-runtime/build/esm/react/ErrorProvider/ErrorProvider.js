import {
    createContext,
    useMemo
} from 'react';
export var ErrorContext = createContext({
    error: null,
    errorId: null,
    errorEnvironment: null,
});
export var ErrorProvider = ErrorContext.Provider;
export var useWidgetErrorContext = function(widgetError, widgetErrorId, controllerError) {
    return useMemo(function() {
        if (controllerError) {
            var error = controllerError.error,
                errorId = controllerError.errorId;
            return {
                error: error,
                errorId: errorId !== null && errorId !== void 0 ? errorId : null,
                errorEnvironment: 'controller',
            };
        }
        if (widgetError) {
            return {
                error: widgetError,
                errorId: widgetErrorId !== null && widgetErrorId !== void 0 ? widgetErrorId : null,
                errorEnvironment: 'component',
            };
        }
        return {
            error: null,
            errorId: null,
            errorEnvironment: null,
        };
    }, [widgetError, controllerError]);
};
//# sourceMappingURL=ErrorProvider.js.map