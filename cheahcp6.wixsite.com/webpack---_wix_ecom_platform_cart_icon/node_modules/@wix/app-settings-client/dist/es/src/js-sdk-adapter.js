import {
    __awaiter,
    __generator
} from "tslib";
import {
    wixSdk
} from '@wix/js-sdk-wrapper/creator';
var JsSdkAdapter = /** @class */ (function() {
    function JsSdkAdapter(_a) {
        var jsSdkInstance = _a.jsSdkInstance,
            signedInstance = _a.signedInstance;
        this.jsSdkWrapper = wixSdk(jsSdkInstance);
        this.originalJsSdk = jsSdkInstance;
        this.signedInstance = signedInstance;
    }
    JsSdkAdapter.prototype.getAppDefId = function() {
        return this.jsSdkWrapper.Utils.getInstanceValue('appDefId');
    };
    JsSdkAdapter.prototype.getInstanceId = function() {
        var metaSiteId = this.jsSdkWrapper.Utils.getInstanceValue('metaSiteId');
        var originInstanceId = this.jsSdkWrapper.Utils.getInstanceValue('originInstanceId');
        // pre-save mode; ex: when editing a template, the instanceId is not persisted YET,
        // so data does not exists for that instanceId. Hence, we need to take the data that is saved
        // on the template (originInstanceId).
        if (!metaSiteId && originInstanceId) {
            return originInstanceId;
        } else {
            return this.jsSdkWrapper.Utils.getInstanceId();
        }
    };
    JsSdkAdapter.prototype.getExternalId = function() {
        return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(_a) {
                switch (_a.label) {
                    case 0:
                        return [4 /*yield*/ , this.jsSdkWrapper.getExternalId()];
                    case 1:
                        return [2 /*return*/ , _a.sent()];
                }
            });
        });
    };
    JsSdkAdapter.prototype.setExternalId = function(id) {
        return __awaiter(this, void 0, void 0, function() {
            var _this = this;
            return __generator(this, function(_a) {
                switch (_a.label) {
                    case 0:
                        //TODO: once js-sdk version released update signature in js-sdk-wrapper
                        return [4 /*yield*/ , new Promise(function(resolve, reject) {
                            return _this.originalJsSdk.Settings.setExternalId(id, resolve, reject, true);
                        })];
                    case 1:
                        //TODO: once js-sdk version released update signature in js-sdk-wrapper
                        _a.sent();
                        return [2 /*return*/ ];
                }
            });
        });
    };
    JsSdkAdapter.prototype.triggerSettingsUpdated = function(data, scope) {
        var message = {
            scope: scope,
            payload: data,
            source: 'app-settings'
        };
        this.jsSdkWrapper.Settings.triggerSettingsUpdatedEvent(message, this.jsSdkWrapper.Utils.getOrigCompId());
    };
    JsSdkAdapter.prototype.onSettingsUpdated = function(scope, cb) {
        this.jsSdkWrapper.addEventListener('SETTINGS_UPDATED', function(data) {
            if (data && data.source === 'app-settings' && data.scope === scope) {
                cb(data.payload);
            }
        });
    };
    return JsSdkAdapter;
}());
export {
    JsSdkAdapter
};
//# sourceMappingURL=js-sdk-adapter.js.map