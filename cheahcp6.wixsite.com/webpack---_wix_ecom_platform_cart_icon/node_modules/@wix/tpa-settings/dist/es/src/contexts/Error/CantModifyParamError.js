import {
    __extends
} from "tslib";
export var ModifyModes;
(function(ModifyModes) {
    ModifyModes["Set"] = "set";
    ModifyModes["Reset"] = "reset";
    ModifyModes["ResetAll"] = "resetAll";
    ModifyModes["PublishEvent"] = "publishEvent";
})(ModifyModes || (ModifyModes = {}));
export var ParamType;
(function(ParamType) {
    ParamType["Setting"] = "Settings";
    ParamType["Styles"] = "Styles";
})(ParamType || (ParamType = {}));
var CantModifyParamError = /** @class */ (function(_super) {
    __extends(CantModifyParamError, _super);

    function CantModifyParamError(mode, type) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, "\nCan't modify ".concat(type, " values from current environment.\nPlease make sure you are not using `").concat(type, ".").concat(mode, "(...)` from the widget part.\n")) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
    }
    return CantModifyParamError;
}(Error));
export {
    CantModifyParamError
};
//# sourceMappingURL=CantModifyParamError.js.map