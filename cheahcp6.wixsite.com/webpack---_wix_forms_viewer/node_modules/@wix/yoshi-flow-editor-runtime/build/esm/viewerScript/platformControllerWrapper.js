import {
    OOIControllerFlowAPI
} from '../flow-api/OOIController';
import {
    createDangerousPublicDataOverride
} from '../helpers/createDangerousPublicDataOverride';
import {
    createDangerousStylesOverride
} from '../helpers/createDangerousStylesOverride';
import {
    getPublicPath
} from '../utils';
import {
    createPanoramaClient
} from '../panorama';
export var platformControllerWrapper = function(optionalDeps, controllerDescriptor, controllerConfig, viewerScriptFlowAPI, viewerScriptFlowAPIInitPromise, getAppData) {
    var appData = getAppData();
    var panoramaClient = createPanoramaClient(controllerConfig.essentials, {
        componentId: controllerDescriptor.id,
        sentryConfig: controllerDescriptor.sentryConfig,
        environment: 'Viewer:Worker',
    });
    // TODO: Change it to Platform Flow API in Yoshi 6
    var flowAPI = new OOIControllerFlowAPI({
        translations: viewerScriptFlowAPI.createTranslations(controllerDescriptor, optionalDeps, {
            basePath: getPublicPath()
        }),
        componentId: controllerDescriptor.id,
        componentName: controllerDescriptor.componentName,
        viewerScriptFlowAPI: viewerScriptFlowAPI,
        appDefinitionId: controllerDescriptor.appDefinitionId,
        widgetId: controllerDescriptor.id,
        translationsConfig: controllerDescriptor.translationsConfig,
        persistentAcrossPages: controllerDescriptor.persistentAcrossPages,
        biLogger: controllerDescriptor.biLogger,
        fedopsConfig: controllerDescriptor.fedopsConfig,
        sentryConfig: controllerDescriptor.sentryConfig,
        controllerConfig: controllerConfig,
        shouldUseEssentials: controllerDescriptor.shouldUseEssentials,
        multilingualDisabled: controllerDescriptor.multilingualDisabled,
        panoramaClient: panoramaClient,
    });
    return controllerDescriptor.method({
        controllerConfig: controllerConfig,
        flowAPI: flowAPI,
        appData: appData,
        dangerousPublicDataOverride: createDangerousPublicDataOverride(flowAPI),
        dangerousStylesOverride: createDangerousStylesOverride(flowAPI),
    });
};
//# sourceMappingURL=platformControllerWrapper.js.map